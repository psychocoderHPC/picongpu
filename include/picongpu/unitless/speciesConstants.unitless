/* Copyright 2015-2020 Rene Widera
 *
 * This file is part of PIConGPU.
 *
 * PIConGPU is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * PIConGPU is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with PIConGPU.
 * If not, see <http://www.gnu.org/licenses/>.
 */


#pragma once

namespace picongpu
{
    //! Charge of base particle
    CREATE_GLOBAL_VAR(float_X, BASE_CHARGE, PIC);
    DEF_GLOBAL_VAR(float_64, BASE_CHARGE, units::coulomb, [=](auto x)
    {
      return SI::BASE_CHARGE_SI;
    });

    GLOBAL_VAR_CONVERSION(BASE_CHARGE, PIC, [=](auto x)
    {
      x = BASE_CHARGE(base::SI) * BASE_CHARGE.sfactor(base::SI, base::PIC);
      return x;
    });


    //! Mass of base particle
    CREATE_GLOBAL_VAR(float_X, BASE_MASS, PIC);
    DEF_GLOBAL_VAR(float_64, BASE_MASS, units::kilogram, [=](auto x)
    {
      return SI::BASE_MASS_SI;
    });

    GLOBAL_VAR_CONVERSION(BASE_MASS, PIC, [=](auto x)
    {
      x = BASE_MASS(base::SI) * BASE_MASS.sfactor(base::SI, base::PIC);
      return x;
    });



} //namespace picongpu
