/* Copyright 2013-2020 Axel Huebl, Heiko Burau, Rene Widera
 *
 * This file is part of PIConGPU.
 *
 * PIConGPU is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * PIConGPU is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with PIConGPU.
 * If not, see <http://www.gnu.org/licenses/>.
 */

#pragma once

#include <pmacc/types.hpp>
#include "picongpu/simulation_defines.hpp"
#include "picongpu/particles/shapes/CIC.hpp"
#include "picongpu/fields/currentDeposition/Strategy.def"


namespace picongpu
{
    namespace currentSolver
    {
        /** Current deposition algorithm from J. Villasenor and O. Buneman
         *
         * paper: J. Villasenor and O. Buneman. Rigorous charge conservation for local
         * electromagnetic field solvers. Computer Physics Communications, 69:306, 1992.
         * https://doi.org/10.1016/0010-4655(92)90169-Y
         *
         * @tparam T_ParticleShape the particle shape for the species, supports only [picongpu::particles::shapes::CIC]
         * @tparam T_Strategy Used strategy to reduce the scattered data [currentSolver::strategy]
         */
        template<
            typename T_ParticleShape = picongpu::particles::shapes::CIC,
            typename T_Strategy = traits::GetDefaultStrategy_t<>>
        struct VillaBune;

        namespace traits
        {
            template<typename T_ParticleShape, typename T_Strategy>
            struct GetStrategy<VillaBune<T_ParticleShape, T_Strategy>>
            {
                using type = T_Strategy;
            };
        } // namespace traits
    } // namespace currentSolver
} // namespace picongpu
