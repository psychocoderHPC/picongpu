/**
 * Copyright 2013-2014 Axel Huebl, Rene Widera
 *
 * This file is part of PIConGPU. 
 * 
 * PIConGPU is free software: you can redistribute it and/or modify 
 * it under the terms of the GNU General Public License as published by 
 * the Free Software Foundation, either version 3 of the License, or 
 * (at your option) any later version. 
 * 
 * PIConGPU is distributed in the hope that it will be useful, 
 * but WITHOUT ANY WARRANTY; without even the implied warranty of 
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the 
 * GNU General Public License for more details. 
 * 
 * You should have received a copy of the GNU General Public License 
 * along with PIConGPU.  
 * If not, see <http://www.gnu.org/licenses/>. 
 */ 
 


#pragma once

#include "simulation_defines/param/particleConfig.param"

namespace picongpu
{
    namespace particleInitRandomPos
    {
        /** Count of particles per cell at initial state
         *  unit: none */
        const uint32_t NUM_PARTICLES_PER_CELL = SET_NUM_PARTICLES_PER_CELL;
    }
    
    namespace particleInitQuietStart
    {
        
#if(SIMDIM==DIM3)
        const uint32_t NUM_PARTICLES_PER_CELL = SET_NUM_PARTICLES_PER_CELL_X
                                              * SET_NUM_PARTICLES_PER_CELL_Y
                                              * SET_NUM_PARTICLES_PER_CELL_Z;
        CONST_VECTOR(int,DIM3,num_particle_per_cell,SET_NUM_PARTICLES_PER_CELL_X,SET_NUM_PARTICLES_PER_CELL_Y,SET_NUM_PARTICLES_PER_CELL_Z);
#elif(SIMDIM==DIM2)
        const uint32_t NUM_PARTICLES_PER_CELL = SET_NUM_PARTICLES_PER_CELL_X
                                              * SET_NUM_PARTICLES_PER_CELL_Y;
        CONST_VECTOR(int,DIM2,num_particle_per_cell,SET_NUM_PARTICLES_PER_CELL_X,SET_NUM_PARTICLES_PER_CELL_Y);
#endif
        
    }
    
} //namespace picongpu
