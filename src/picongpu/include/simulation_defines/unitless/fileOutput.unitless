/**
 * Copyright 2013-2014 Axel Huebl, Rene Widera, Felix Schmitt
 *
 * This file is part of PIConGPU. 
 * 
 * PIConGPU is free software: you can redistribute it and/or modify 
 * it under the terms of the GNU General Public License as published by 
 * the Free Software Foundation, either version 3 of the License, or 
 * (at your option) any later version. 
 * 
 * PIConGPU is distributed in the hope that it will be useful, 
 * but WITHOUT ANY WARRANTY; without even the implied warranty of 
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the 
 * GNU General Public License for more details. 
 * 
 * You should have received a copy of the GNU General Public License 
 * along with PIConGPU.  
 * If not, see <http://www.gnu.org/licenses/>. 
 */
 


#pragma once

#include <boost/mpl/vector.hpp>
#include <boost/mpl/pair.hpp>

#include "compileTime/conversion/MakeSeq.hpp"

/** some forward declarations we need */
#include "fields/Fields.def"
#include "particles/Species.hpp"
#include "particles/particleToGrid/energyDensity.kernel"

namespace picongpu
{
    /** Note: you will need at least FieldE and FieldB for restart
     *        capabilities!
     *  Possible fields: FieldE, FieldB, FieldJ
     */
    typedef typename MakeSeq<FieldE, FieldB>::type NativeFileOutputFields;
    
    typedef VectorAllSpecies FileOutputParticles;
    
    /** TimeAvg Fields
     * \todo Reduce/Avg on host-side RAM with a plugin
     */
    
    /** FieldTmp output (calculated at runtime)
     */
    using namespace particleToGrid;
 /*   
    typedef ComputeEnergyDensityPerFrame<
            speciesParticleShape::ParticleShape::ChargeAssignment,
            ComputeEnergyDensityOptions::calcDensity
        > TmpParticleDensity;
    
    typedef ComputeEnergyDensityPerFrame<
            speciesParticleShape::ParticleShape::ChargeAssignment,
            ComputeEnergyDensityOptions::calcEnergyDensity
        > TmpParticleEnergyDensity;
    
    typedef ComputeEnergyDensityPerFrame<
            particleShape::Counter::ChargeAssignment,
            ComputeEnergyDensityOptions::calcCounter
        > TmpParticleCounter;
*/
    /** List of solvers that use FieldTmp and electrons */
    typedef typename MakeSeq<
/*
#if (ENABLE_ELECTRONS == 1)
        FieldTmpOperation< TmpParticleDensity, typename PIC_Electrons::type > ,
        FieldTmpOperation< TmpParticleEnergyDensity, typename PIC_Electrons::type >
#endif
*/
    >::type PluginsFileOutputFieldsElectrons;

    /** List of solvers that use FieldTmp and ions */
    typedef typename MakeSeq<
/*
#if (ENABLE_IONS == 1)
        FieldTmpOperation< TmpParticleDensity,typename PIC_Ions::type >,
        FieldTmpOperation< TmpParticleEnergyDensity, typename PIC_Ions::type >
#endif
*/
    >::type PluginsFileOutputFieldsIons;
    
    
    /** This list is use to dump fields to a file. */
    typedef typename MakeSeq<
            NativeFileOutputFields,
            PluginsFileOutputFieldsElectrons,
            PluginsFileOutputFieldsIons
    >::type FileOutputFields;
}
