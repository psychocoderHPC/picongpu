/* Copyright 2014-2022 Marco Garten, Axel Huebl
 *
 * This file is part of PIConGPU.
 *
 * PIConGPU is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * PIConGPU is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with PIConGPU.
 * If not, see <http://www.gnu.org/licenses/>.
 */

/** @file
 *
 * This file contains the ionization energies of commonly used elements of the
 * periodic table. Each atomic species in PIConGPU can represent exactly one
 * element. The ionization energies of that element are stored in a vector which
 * contains the *name* and *proton number* as well as a list of
 * *energy values*. The number of ionization levels must be equal to the
 * proton number of the element.
 */

#pragma once


namespace picongpu
{
    namespace ionization
    {
        /** Ionization potentials
         *
         * Please follow these rules for defining ionization energies of atomic species,
         * unless your chosen ionization model requires a different unit system than `AU::`
         *     - input of values in either atomic units or converting eV or Joule to them
         *     -> use either UNITCONV_eV_to_AU or SI::ATOMIC_UNIT_ENERGY for that purpose
         *     - use `float_X` as the preferred data type
         *
         * example:
         *     ionization energy for ground state hydrogen: 13.6 eV
         *     1 Joule       = 1 kg * m^2 / s^2
         *     1 eV          = 1.602e-19 J
         *
         *     1 AU (energy) = 27.2 eV
         *                   = 1 Hartree
         *                   = 4.36e-18 J
         *                   = 2 Rydberg
         *                   = 2 x Hydrogen ground state binding energy
         *
         * Atomic units are useful for ionization models because they simplify the
         * formulae greatly and provide intuitively understandable relations to a
         * well-known system, i.e. the Hydrogen atom.
         *
         * for PMACC_CONST_VECTOR usage,
         * @see include/pmacc/math/ConstVector.hpp
         * for finding ionization energies,
         * @url http://physics.nist.gov/PhysRefData/ASD/ionEnergy.html
         *
         * Reference: Kramida, A., Ralchenko, Yu., Reader, J., and NIST ASD Team (2014)
         *            NIST Atomic Spectra Database (ver. 5.2), [Online]
         *            Available: http://physics.nist.gov/asd [2017, February 8]
         *            National Institute of Standards and Technology, Gaithersburg, MD
         */
        namespace energies
        {
            namespace AU
            {
                /* ionization energy for argon in atomic units */
                PMACC_CONST_VECTOR(
                    float_X,
                    18,
                    Argon,
                    15.7596119 * UNITCONV_eV_to_AU,
                    27.62967 * UNITCONV_eV_to_AU,
                    40.735 * UNITCONV_eV_to_AU,
                    59.58 * UNITCONV_eV_to_AU,
                    74.84 * UNITCONV_eV_to_AU,
                    91.290 * UNITCONV_eV_to_AU,
                    124.41 * UNITCONV_eV_to_AU,
                    143.4567 * UNITCONV_eV_to_AU,
                    422.60 * UNITCONV_eV_to_AU,
                    479.76 * UNITCONV_eV_to_AU,
                    540.4 * UNITCONV_eV_to_AU,
                    619.0 * UNITCONV_eV_to_AU,
                    685.5 * UNITCONV_eV_to_AU,
                    755.13 * UNITCONV_eV_to_AU,
                    855.5 * UNITCONV_eV_to_AU,
                    918.375 * UNITCONV_eV_to_AU,
                    4120.6657 * UNITCONV_eV_to_AU,
                    4426.2229 * UNITCONV_eV_to_AU);

            } // namespace AU
        } // namespace energies
    } // namespace ionization
} // namespace picongpu
