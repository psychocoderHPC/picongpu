# Copyright 2017-2019 Axel Huebl
#
# This file is part of PIConGPU.
#
# PIConGPU is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# PIConGPU is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with PIConGPU.
# If not, see <http://www.gnu.org/licenses/>.
#

##
## This configuration file is used by PIConGPU's TBG tool to create a
## batch script for PIConGPU runs. For a detailed description of PIConGPU
## configuration files including all available variables, see
##
##                      docs/TBG_macros.cfg
##


#################################
## Section: Required Variables ##
#################################

TBG_wallTime="12:00:00"

TBG_devices_x=6
TBG_devices_y=12
TBG_devices_z=6

res4=18

TBG_gridSize="$((res4 * 4 * 20)) $((res4 * 4 * 40)) $((res4 * 20 * 4))"
TBG_gridDist="'$((res4*4*5)),$((res4*2*5)){4},$((res*4*5))' '$((res4*4*5)){2},$((res4*2*5)){8},$((res4*4*5)){2}' '240{6}'"
# t_0 + 100fs (where t_0 is laser max at core surface  = 120fs)
TBG_steps="10282"
TBG_t0_step="5608"

TBG_periodic="--periodic 0 0 0"
TBG_boundary="--e_boundaryOffset 12 12 12 --H_boundaryOffset 12 12 12"


#################################
## Section: Optional Variables ##
#################################

TBG_ADIOS2_configuration_frequent="'{              \
  \"adios2\": {                                       \
       \"engine\": {                                  \
          \"usesteps\": true                          \
          , \"parameters\": {                         \
              \"BufferGrowthFactor\": \"1.5\"         \
              , \"InitialBufferSize\": \"2GB\"        \
              , \"AggregatorRatio\" : \"1\"           \
          }                                           \
      }                                               \
  }                                                   \
}'"

TBG_ADIOS2_configuration_compression="'{              \
  \"adios2\": {                                        \
    \"dataset\": {                                  \
          \"operators\": [ {                          \
              \"type\": \"blosc\"                     \
              , \"parameters\": {                     \
               \"clevel\": \"1\"                      \
               ,\"cname\": \"zstd\"                   \
               , \"doshuffle\": \"BLOSC_BITSHUFFLE\"  \
               } \
          } ]                                         \
       , \"engine\": {                                  \
          \"usesteps\": true                          \
          , \"parameters\": {                         \
              \"BufferGrowthFactor\": \"1.5\"         \
              , \"InitialBufferSize\": \"10GB\"       \
              , \"AggregatorRatio\" : \"1\"           \
          }                                           \
      }                                               \
  }                                                   \
}'"

TBG_ADIOS2_configuration_compression_cp="'{           \
  \"adios2\": {                                       \
      \"dataset\": {                                  \
          \"operators\": [ {                          \
              \"type\": \"blosc\"                     \
              , \"parameters\": {                     \
               \"clevel\": \"3\"                      \
               ,\"cname\": \"zstd\"                   \
               , \"doshuffle\": \"BLOSC_BITSHUFFLE\"  \
               } \
          } ]                                         \
      }                                               \
      , \"engine\": {                                 \
          \"type\": \"file\"                          \
          , \"parameters\": {                         \
              \"BufferGrowthFactor\": \"1.1\"         \
              , \"InitialBufferSize\": \"40GB\"       \
              , \"AggregatorRatio\" : \"1\"           \
          }                                           \
      }                                               \
  }                                                   \
}'"


# regular output
TBG_period_fields="256"
TBG_perdiod_checkpoint="!TBG_t0_step:!TBG_t0_step,!TBG_steps:!TBG_steps,2512:2512,7536:7536"
TBG_openPMD_fields="--openPMD.period !TBG_period_fields --openPMD.ext bp --openPMD.file fields  --openPMD.source 'fields_all' --openPMD.json !TBG_ADIOS2_configuration_compression"
TBG_period_density="!TBG_t0_step:!TBG_steps:2"
TBG_openPMD_density="--openPMD.period !TBG_period_density --openPMD.ext bp --openPMD.file density  --openPMD.source 'e_all_density' --openPMD.json !TBG_ADIOS2_configuration_frequent"

TBG_checkpoints="--checkpoint.period !TBG_period_checkpoints --checkpoint.backend openPMD --checkpoint.openPMD.json !TBG_ADIOS2_configuration_compression_cp"

TBG_IO="!TBG_openPMD_fields !TBG_openPMD_density !TBG_checkpoints"

TBG_calo="--H_calorimeter.period $((16*res4)) --H_calorimeter.file calo_H --H_calorimeter.filter all --H_calorimeter.logScale 0 --H_calorimeter.minEnergy 0 --H_calorimeter.maxEnergy 200000 --H_calorimeter.numBinsEnergy 100 --H_calorimeter.openingPitch 24 --H_calorimeter.openingYaw 200 --H_calorimeter.numBinsPitch 16 --H_calorimeter.numBinsYaw 100"

# Count particles
TBG_countParticles="--e_macroParticlesCount.period $((12 * res4))  \
                    --H_macroParticlesCount.period $((12 * res4))"


# Create a particle-energy histogram [in keV]
TBG_e_histogram="--e_energyHistogram.period $((10 * res4)) --e_energyHistogram.filter all  --e_energyHistogram.binCount 1024    \
                 --e_energyHistogram.minEnergy 0 --e_energyHistogram.maxEnergy 600000"
TBG_H_histogram="--H_energyHistogram.period $((10 * res4)) --H_energyHistogram.filter all --H_energyHistogram.binCount 1024    \
                 --H_energyHistogram.minEnergy 0 --H_energyHistogram.maxEnergy 240000 \
                 --H_energyHistogram.period $((10 * res4)) --H_energyHistogram.filter forwardPinhole --H_energyHistogram.binCount 1024    \
                 --H_energyHistogram.minEnergy 0 --H_energyHistogram.maxEnergy 240000"

# longitudinal phase space: in m_<species> c
TBG_e_PSypy="--e_phaseSpace.period $((16 * res4)) --e_phaseSpace.filter all --e_phaseSpace.space y --e_phaseSpace.momentum py --e_phaseSpace.min -20.0 --e_phaseSpace.max 60.0 \
             --e_phaseSpace.period $((16 * res4)) --e_phaseSpace.filter all --e_phaseSpace.space y --e_phaseSpace.momentum py --e_phaseSpace.min -256.0 --e_phaseSpace.max 768.0"

TBG_H_small_PSypy="--H_phaseSpace.period $((8 * res4)) --H_phaseSpace.filter all --H_phaseSpace.space y --H_phaseSpace.momentum py --H_phaseSpace.min -0.1 --H_phaseSpace.max 0.14"
TBG_H_wide_PSypy="--H_phaseSpace.period $((16 * res4)) --H_phaseSpace.filter all --H_phaseSpace.space y --H_phaseSpace.momentum py --H_phaseSpace.min -0.22 --H_phaseSpace.max 0.74 \
                  --H_phaseSpace.period $((16 * res4)) --H_phaseSpace.filter forwardPinhole --H_phaseSpace.space y --H_phaseSpace.momentum py --H_phaseSpace.min -0.22 --H_phaseSpace.max 0.74"

# useful for heating tests
TBG_sumEnergy="--fields_energy.period $((8 * res4)) \
               --e_energy.period $((8 * res4)) --e_energy.filter all \
               --H_energy.period $((8 * res4)) --H_energy.filter all"
TBG_chargeConservation="--chargeConservation.period $((8 * res4))"

TBG_plugins="!TBG_e_histogram !TBG_H_histogram \
             !TBG_e_PSypy !TBG_H_wide_PSypy !TBG_H_small_PSypy  \
             !TBG_sumEnergy !TBG_chargeConservation !TBG_countParticles  \
             !TBG_IO !TBG_calo"


#################################
## Section: Program Parameters ##
#################################

TBG_deviceDist="!TBG_devices_x !TBG_devices_y !TBG_devices_z"

TBG_progress="-p 1"

TBG_programParams="-d !TBG_deviceDist \
                   -g !TBG_gridSize   \
                   --gridDist !TBG_gridDist \
                   -s !TBG_steps      \
                   !TBG_periodic      \
                   !TBG_plugins       \
                   !TBG_progress      \
                   --versionOnce"

# TOTAL number of devices
TBG_tasks="$(( TBG_devices_x * TBG_devices_y * TBG_devices_z ))"

"$TBG_cfgPath"/submitAction.sh
