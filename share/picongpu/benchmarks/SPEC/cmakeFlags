#!/usr/bin/env bash
#
# Copyright 2013-2021 Axel Huebl, Rene Widera
#
# This file is part of PIConGPU.
#
# PIConGPU is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# PIConGPU is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with PIConGPU.
# If not, see <http://www.gnu.org/licenses/>.
#

#
# generic compile options
#

################################################################################
# add presets here
#   - default: index 0
#   - start with zero index
#   - increase by 1, no gaps

flags[0]=""
flags[1]="-DPARAM_OVERWRITES:LIST='-DPARAM_PRECISION=precision32Bit;-DPARAM_PARTICLESHAPE=TSC'"
flags[2]="-DPARAM_OVERWRITES:LIST='-DPARAM_PRECISION=precision64Bit;-DPARAM_PARTICLESHAPE=TSC'"
# common radiation with ideal setup
flags[3]="-DPARAM_OVERWRITES:LIST='-DPARAM_PRECISION=precision32Bit;-DPARAM_PARTICLESHAPE=TSC;-DPARAM_RADIATION=1'"
# common radiation with non-ideal form factor but ideal window function
flags[4]="-DPARAM_OVERWRITES:LIST='-DPARAM_PRECISION=precision32Bit;-DPARAM_PARTICLESHAPE=TSC;-DPARAM_RADIATION=1;-DPARAM_RADFORMFACTOR=radFormFactor_coherent'"
# common radiation with ideal form factor but non-ideal window function
flags[5]="-DPARAM_OVERWRITES:LIST='-DPARAM_PRECISION=precision32Bit;-DPARAM_PARTICLESHAPE=TSC;-DPARAM_RADIATION=1;-DPARAM_RADWINDOWFUNCTION=radWindowFunctionNone'"
# common radiation with both non-ideal form factor and window function
flags[6]="-DPARAM_OVERWRITES:LIST='-DPARAM_PRECISION=precision32Bit;-DPARAM_PARTICLESHAPE=TSC;-DPARAM_RADIATION=1;-DPARAM_RADFORMFACTOR=radFormFactor_coherent;-DPARAM_RADWINDOWFUNCTION=radWindowFunctionNone'"



################################################################################
# execution

case "$1" in
    -l)  echo ${#flags[@]}
         ;;
    -ll) for f in "${flags[@]}"; do echo $f; done
         ;;
    *)   echo -n ${flags[$1]}
         ;;
esac
