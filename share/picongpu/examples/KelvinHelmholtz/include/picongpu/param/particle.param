/* Copyright 2013-2021 Axel Huebl, Rene Widera, Benjamin Worpitz,
 *                     Richard Pausch
 *
 * This file is part of PIConGPU.
 *
 * PIConGPU is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * PIConGPU is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with PIConGPU.
 * If not, see <http://www.gnu.org/licenses/>.
 */

#pragma once

#include "picongpu/particles/filter/filter.def"
#include "picongpu/particles/manipulators/manipulators.def"
#include "picongpu/particles/startPosition/functors.def"

#include <pmacc/math/operation.hpp>

namespace picongpu
{
    namespace particles
    {
        namespace startPosition
        {
            struct QuietParam16ppc
            {
                /** Count of particles per cell per direction at initial state
                 *  unit: none
                 */
                using numParticlesPerDimension = typename mCT::shrinkTo<mCT::Int<2, 2, 1>, simDim>::type;
            };
            using Quiet16ppc = QuietImpl<QuietParam16ppc>;

        } // namespace startPosition

        /** a particle with a weighting below MIN_WEIGHTING will not
         *      be created / will be deleted
         *  unit: none
         */
        constexpr float_X MIN_WEIGHTING = 10.0;

        /** During unit normalization, we assume this is a typical
         *  number of particles per cell for normalization of weighted
         *  particle attributes.
         */
        constexpr uint32_t TYPICAL_PARTICLES_PER_CELL
            = mCT::volume<startPosition::QuietParam16ppc::numParticlesPerDimension>::type::value;

    } // namespace particles
} // namespace picongpu
